{"version":3,"sources":["components/Board/index.js","components/Circle/index.js","components/Cross/index.js","components/Game/index.js","components/Header/index.js","components/History/index.js","components/Moves/index.js","components/Square/index.js","App.js","index.js"],"names":["Board","squares","onClick","winningPosition","endgame","renderSquareComponent","index","value","className","Circle","Cross","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXIsNext","hasWinner","setHasWinner","winner","setWinner","setWinningPosition","setEndgame","useEffect","checkForWinner","returnLastTurnSquares","handleEndgame","length","winningPositions","i","a","b","c","boardIsFull","every","square","gameTied","console","log","id","title","handleNewGame","newHistory","slice","lastTurnSquares","combined","markBoard","status","map","move","moveIndex","key","step","Header","History","children","Moves","description","Square","toLowerCase","includes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eabcc492.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Board.scss';\r\nimport { Square } from '../';\r\n\r\nexport default function Board({ squares, onClick, winningPosition, endgame }) {\r\n  \r\n  const renderSquareComponent = (index) => {\r\n    return (\r\n      <Square\r\n        index={index}\r\n        value={squares[index]}\r\n        onClick={() => onClick(index)}\r\n        winningPosition={winningPosition}\r\n        endgame={endgame}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"board-container\">\r\n      <div className=\"board\">\r\n        <div className=\"board-row\">\r\n          {renderSquareComponent(0)}\r\n          {renderSquareComponent(1)}\r\n          {renderSquareComponent(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {renderSquareComponent(3)}\r\n          {renderSquareComponent(4)}\r\n          {renderSquareComponent(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {renderSquareComponent(6)}\r\n          {renderSquareComponent(7)}\r\n          {renderSquareComponent(8)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Circle.scss';\r\n\r\nexport default function Circle() {\r\n\r\n  return <div className=\"circle\" />\r\n}\r\n","import React from 'react';\r\nimport './Cross.scss';\r\n\r\nexport default function Cross() {\r\n\r\n  return (\r\n    <div className=\"cross\">\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Game.scss';\r\nimport { Board, Header, History, Moves } from '../';\r\n\r\nexport default function Game() {\r\n\r\n  const [history, setHistory] = useState([Array(9).fill(null)]);\r\n  const [stepNumber, setStepNumber] = useState(0);\r\n  const [xIsNext, setXIsNext] = useState(true);\r\n  const [hasWinner, setHasWinner] = useState(false);\r\n  const [winner, setWinner] = useState('');\r\n  const [winningPosition, setWinningPosition] = useState([]);\r\n  const [endgame, setEndgame] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!hasWinner) checkForWinner(returnLastTurnSquares());\r\n  })\r\n\r\n  useEffect(() => {\r\n    handleEndgame();\r\n    // eslint-disable-next-line\r\n  }, [history, hasWinner])\r\n\r\n  const returnLastTurnSquares = () => history[history.length - 1];\r\n\r\n  const markBoard = (index) => {\r\n    const newHistory = history.slice(0, stepNumber + 1);\r\n    const lastTurnSquares = [...newHistory[newHistory.length - 1]];\r\n\r\n    if (!!lastTurnSquares[index] || !!hasWinner) return;\r\n    \r\n    lastTurnSquares[index] = xIsNext ? 'X' : 'O';\r\n    const combined = [...newHistory, lastTurnSquares];\r\n\r\n    setHistory(combined);\r\n    setStepNumber(newHistory.length);\r\n    setXIsNext(!xIsNext);\r\n  }\r\n\r\n  const checkForWinner = (squares) => {\r\n    const winningPositions = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n\r\n    for (let i = 0; i < winningPositions.length; i++) {\r\n      const [a, b, c] = winningPositions[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        setHasWinner(true);\r\n        setWinner(squares[a]);\r\n        setWinningPosition(winningPositions[i]);        \r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const jumpTo = (step) => {\r\n    setStepNumber(step);\r\n    setXIsNext((step % 2) === 0);\r\n  }\r\n\r\n  const handleNewGame = () => {\r\n    setHistory([Array(9).fill(null)]);\r\n    setStepNumber(0);\r\n    setXIsNext(true);\r\n    setHasWinner(false);\r\n    setWinner('');\r\n    setWinningPosition([]);\r\n    setEndgame(false);\r\n  }\r\n\r\n  const handleEndgame = () => {\r\n    const boardIsFull = returnLastTurnSquares().every(square => !!square);\r\n    const gameTied = !endgame && boardIsFull;\r\n    console.log('entrou no handleEndgame')\r\n    setEndgame(gameTied || hasWinner);\r\n  }\r\n\r\n  function handleStatus() {\r\n    if (!!winner) return `Player ${winner} wins!`;\r\n    if (endgame) return \"Endgame!\";\r\n    return `Next player: ${xIsNext ? 'X' : 'O'}`;\r\n  }\r\n\r\n  return (\r\n    <div id=\"game\">\r\n\r\n      <Header \r\n        title=\"React Hooks Tic Tac Toe\"\r\n        hasWinner={hasWinner}\r\n        endgame={endgame}\r\n        handleNewGame={() => handleNewGame()}\r\n      />\r\n\r\n      <div className=\"container\">\r\n\r\n        <Board \r\n          squares={history[stepNumber]}\r\n          onClick={(index) => markBoard(index)}\r\n          winningPosition={winningPosition}\r\n          endgame={endgame && !hasWinner}\r\n        />\r\n\r\n        <History \r\n          status={handleStatus()}\r\n          hasWinner={hasWinner}\r\n        >\r\n          {history.map((move, moveIndex) => (\r\n            <Moves\r\n              key={moveIndex}\r\n              index={moveIndex}\r\n              onClick={(moveIndex) => jumpTo(moveIndex)}\r\n            />\r\n          ))}\r\n        </History>\r\n        \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Header.scss';\r\n\r\nexport default function Header({ title, hasWinner, endgame, handleNewGame }) {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n\r\n      <h1>{title}</h1>\r\n\r\n      {(hasWinner || endgame) && \r\n        <button\r\n          className=\"new-game-btn\"\r\n          onClick={() => handleNewGame()}\r\n        >\r\n          New game!\r\n        </button>\r\n      }\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './History.scss';\r\n\r\nexport default function History({ children, status, hasWinner }) {\r\n\r\n  return (\r\n    <div className=\"history\">\r\n      <h2>{status}</h2>\r\n      {!hasWinner &&\r\n        <>\r\n          <h3>Game steps:</h3>\r\n          <ol>\r\n            {children}\r\n          </ol>\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Moves.scss';\r\n\r\nexport default function Moves({ index, onClick }) {\r\n\r\n  const description = index ? `Go to move #${index}` : 'Go to game start';\r\n\r\n  return (\r\n    <li>\r\n      <button onClick={() => onClick(index)}>{description}</button>\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Square.scss';\r\nimport Cross from '../Cross';\r\nimport Circle from '../Circle';\r\n\r\nexport default function Square({ index, value, onClick, winningPosition, endgame }) {\r\n\r\n  const returnClassNames = () => {\r\n    return `${!!value && value.toLowerCase()} ${winningPosition.includes(index) ? 'winner' : ''} ${endgame ? 'endgame' : ''}`;\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={`square ${returnClassNames()}`}\r\n      onClick={() => onClick()}\r\n    >\r\n      {value === 'X' && <Cross />}\r\n      {value === 'O' && <Circle />}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Game } from './components';\r\n\r\nexport default function App() {\r\n  return <Game />;\r\n} \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}